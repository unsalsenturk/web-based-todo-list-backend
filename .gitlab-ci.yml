stages:
  - build
  - test
  - dockerize
  - deploy2test

build:
    image: golang:latest
    stage: build
    script:
      - go mod download
      - GOOS=linux CGO_ENABLED=0 go build -o /web-based-todolist

test:
  image: golang:latest
  stage: test
  script:
    - go mod download
    - go test $(go list ./... | grep -v /pact)

dockerize:
  image: docker:19.03.12
  stage: dockerize
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

deploy2test:
  stage: deploy2test
  image: google/cloud-sdk
  script:
    - echo $GKE_SERVICE_KEY | base64 -d > ~/encoded_serviceaccount.json
    - gcloud auth activate-service-account --key-file ~/encoded_serviceaccount.json
    - gcloud config set project $GKE_PROJECT_ID
    - gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project serious-timer-342209
    - kubectl apply -f ./deployment/backend-secret.yaml
    - kubectl apply -f ./deployment/backend-deployment.yaml
    - kubectl apply -f ./deployment/backend-service.yaml


    