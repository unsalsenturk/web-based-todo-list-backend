// Code generated by MockGen. DO NOT EDIT.
// Source: .\database\in_memory.go

// Package mock_database is a generated GoMock package.
package mock

import (
	reflect "reflect"
	models "web-based-todo-list-backend/models"

	gomock "github.com/golang/mock/gomock"
)

// MockIDatabase is a mock of IDatabase interface.
type MockIDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockIDatabaseMockRecorder
}

// MockIDatabaseMockRecorder is the mock recorder for MockIDatabase.
type MockIDatabaseMockRecorder struct {
	mock *MockIDatabase
}

// NewMockIDatabase creates a new mock instance.
func NewMockIDatabase(ctrl *gomock.Controller) *MockIDatabase {
	mock := &MockIDatabase{ctrl: ctrl}
	mock.recorder = &MockIDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDatabase) EXPECT() *MockIDatabaseMockRecorder {
	return m.recorder
}

// AddTodoList mocks base method.
func (m *MockIDatabase) AddTodoList(todo string) (*models.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTodoList", todo)
	ret0, _ := ret[0].(*models.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTodoList indicates an expected call of AddTodoList.
func (mr *MockIDatabaseMockRecorder) AddTodoList(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTodoList", reflect.TypeOf((*MockIDatabase)(nil).AddTodoList), todo)
}

// GetTodoList mocks base method.
func (m *MockIDatabase) GetTodoList() (*models.DataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodoList")
	ret0, _ := ret[0].(*models.DataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTodoList indicates an expected call of GetTodoList.
func (mr *MockIDatabaseMockRecorder) GetTodoList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodoList", reflect.TypeOf((*MockIDatabase)(nil).GetTodoList))
}
